{"ast":null,"code":"import { NG_VALIDATORS } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport function compareInputValidator(crossFields) {\n  return control => {\n    if ((control.get(crossFields[0])?.value && control.get(crossFields[1]))?.value && control.get(crossFields[0])?.value === control.get(crossFields[1])?.value) {\n      return null;\n    }\n    return {\n      compareValueError: true\n    };\n  };\n}\n;\nexport class CompareInputValidatorDirective {\n  validate(control) {\n    return this.crossFields ? compareInputValidator(this.crossFields)(control) : null;\n  }\n  constructor() {}\n  static #_ = this.ɵfac = function CompareInputValidatorDirective_Factory(t) {\n    return new (t || CompareInputValidatorDirective)();\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: CompareInputValidatorDirective,\n    selectors: [[\"\", \"appCompareInputValidate\", \"\"]],\n    inputs: {\n      crossFields: [\"appCompareInputValidate\", \"crossFields\"]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALIDATORS,\n      useExisting: CompareInputValidatorDirective,\n      multi: true\n    }])]\n  });\n}","map":{"version":3,"names":["NG_VALIDATORS","compareInputValidator","crossFields","control","get","value","compareValueError","CompareInputValidatorDirective","validate","constructor","_","_2","selectors","inputs","features","i0","ɵɵProvidersFeature","provide","useExisting","multi"],"sources":["C:\\D\\Wole\\Coding\\angular-cross-field-validation\\src\\app\\compare-input-validator.directive.ts"],"sourcesContent":["import { Directive, Input } from '@angular/core';\r\nimport { ValidatorFn, ValidationErrors, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\nexport function compareInputValidator(crossFields: Array<string>): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    if ((control.get(crossFields[0])?.value && control.get(crossFields[1]))?.value &&\r\n      control.get(crossFields[0])?.value === control.get(crossFields[1])?.value) {\r\n      return null;\r\n    }\r\n    return { compareValueError: true };\r\n  };\r\n};\r\n@Directive({\r\n  selector: '[appCompareInputValidate]',\r\n  providers: [{ provide: NG_VALIDATORS, useExisting: CompareInputValidatorDirective, multi: true }]\r\n})\r\nexport class CompareInputValidatorDirective {\r\n\r\n  @Input('appCompareInputValidate') crossFields?: Array<string>;\r\n\r\n  validate(control: AbstractControl) {\r\n    return this.crossFields ? compareInputValidator(this.crossFields)(control) : null;\r\n  }\r\n  constructor() { }\r\n}\r\n"],"mappings":"AACA,SAAyDA,aAAa,QAAQ,gBAAgB;;AAE9F,OAAM,SAAUC,qBAAqBA,CAACC,WAA0B;EAC9D,OAAQC,OAAwB,IAA6B;IAC3D,IAAI,CAACA,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC,CAAC,CAAC,CAAC,EAAEG,KAAK,IAAIF,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC,CAAC,CAAC,CAAC,GAAGG,KAAK,IAC5EF,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC,CAAC,CAAC,CAAC,EAAEG,KAAK,KAAKF,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC,CAAC,CAAC,CAAC,EAAEG,KAAK,EAAE;MAC3E,OAAO,IAAI;;IAEb,OAAO;MAAEC,iBAAiB,EAAE;IAAI,CAAE;EACpC,CAAC;AACH;AAAC;AAKD,OAAM,MAAOC,8BAA8B;EAIzCC,QAAQA,CAACL,OAAwB;IAC/B,OAAO,IAAI,CAACD,WAAW,GAAGD,qBAAqB,CAAC,IAAI,CAACC,WAAW,CAAC,CAACC,OAAO,CAAC,GAAG,IAAI;EACnF;EACAM,YAAA,GAAgB;EAAC,QAAAC,CAAA,G;qBAPNH,8BAA8B;EAAA;EAAA,QAAAI,EAAA,G;UAA9BJ,8BAA8B;IAAAK,SAAA;IAAAC,MAAA;MAAAX,WAAA;IAAA;IAAAY,QAAA,GAAAC,EAAA,CAAAC,kBAAA,CAF9B,CAAC;MAAEC,OAAO,EAAEjB,aAAa;MAAEkB,WAAW,EAAEX,8BAA8B;MAAEY,KAAK,EAAE;IAAI,CAAE,CAAC;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}